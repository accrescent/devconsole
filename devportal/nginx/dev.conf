user nginx;
worker_processes auto;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;

    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    keepalive_timeout 3m;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    http2_recv_buffer_size 128k;

    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    http2_max_concurrent_streams 32;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 256;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/access.log main buffer=64k flush=1m;
    error_log syslog:server=unix:/dev/log,nohostname;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    # Static files & reverse proxy to web application
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost;
        root /usr/share/nginx/html;
        include security.conf;

        index index.html;

        location = "/api/logout" {
            proxy_pass http://portal:8080;
        }

        location ^~ /auth/ {
            proxy_pass http://portal:8080;
        }

        location /api/apps {
            client_max_body_size 128M;
            proxy_pass http://portal:8080;
        }

        location ^~ /api/ {
            proxy_pass http://portal:8080;
        }

        location / {
            proxy_pass http://web;
        }
    }
}
