worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;

    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    keepalive_timeout 3m;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    http2_recv_buffer_size 128k;

    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    http2_max_concurrent_streams 32;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    error_log syslog:server=unix:/dev/log,nohostname;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;
    aio_write on;

    upstream backend {
        server [::1]:8080 max_conns=1024 fail_timeout=1s;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name {{ inventory_hostname }};

        root /var/empty;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ inventory_hostname }};

        root /srv/{{ inventory_hostname }};

        include security.conf;
        add_header Content-Security-Policy "default-src 'self'; font-src https://fonts.gstatic.com; img-src 'self' data:; style-src 'self' 'unsafe-inline'; frame-ancestors 'none'; sandbox allow-downloads allow-forms allow-same-origin allow-scripts; base-uri 'self'; trusted-types angular; require-trusted-types-for 'script';" always;

        gzip_static on;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location = "/auth/github" {
            proxy_pass http://backend;
        }

        location /api/apps {
            client_max_body_size 128M;
            proxy_pass http://backend;
        }

        location ^~ /api/ {
            proxy_pass http://backend;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
